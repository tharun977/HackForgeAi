// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  name          String?
  image         String?
  emailVerified DateTime?
  resetToken    String?
  resetTokenExpiry DateTime?
  projects      Project[]
  collaborators Collaborator[]
  messages      Message[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Project {
  id            String         @id @default(cuid())
  name          String
  description   String
  prompt        String         @db.Text
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  status        String         @default("draft") // draft, generating, completed, failed
  isPublic      Boolean        @default(false)
  language      String
  framework     String
  files         ProjectFile[]
  collaborators Collaborator[]
  messages      Message[]
  analytics     ProjectAnalytics?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([userId])
}

model ProjectFile {
  id        String   @id @default(cuid())
  name      String
  path      String
  content   String   @db.Text
  language  String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
}

model Collaborator {
  id        String   @id @default(cuid())
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      String   @default("viewer") // owner, editor, viewer
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([projectId, userId])
  @@index([projectId])
  @@index([userId])
}

model Message {
  id        String   @id @default(cuid())
  content   String   @db.Text
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([projectId])
  @@index([userId])
}

model ProjectAnalytics {
  id                   String   @id @default(cuid())
  projectId            String   @unique
  project              Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  generationTime       Int      // in seconds
  codeLines            Int
  fileCount            Int
  languageDistribution Json // e.g. { "typescript": 2500, "css": 450 }
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}